// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: api/oauth_login.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PingRequest defines the structure of a ping request.
// This request is used to test the service link connectivity of grpc gateway and grpc service.
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// PongResponse defines the structure of a pong response.
// This response indicates that the service link is healthy.
type PongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply string `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *PongResponse) Reset() {
	*x = PongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongResponse) ProtoMessage() {}

func (x *PongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongResponse.ProtoReflect.Descriptor instead.
func (*PongResponse) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{1}
}

func (x *PongResponse) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

// OSAuthBeginRequest defines the structure of SeaTalk official site authentication beginning request.
type OSAuthBeginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider      string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	CompanyName   string `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	LanguageId    int64  `protobuf:"varint,3,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
	LocationId    int64  `protobuf:"varint,4,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	HqLocationId  int64  `protobuf:"varint,5,opt,name=hq_location_id,json=hqLocationId,proto3" json:"hq_location_id,omitempty"`
	Email         string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	ApplicationId int64  `protobuf:"varint,8,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *OSAuthBeginRequest) Reset() {
	*x = OSAuthBeginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSAuthBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSAuthBeginRequest) ProtoMessage() {}

func (x *OSAuthBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSAuthBeginRequest.ProtoReflect.Descriptor instead.
func (*OSAuthBeginRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{2}
}

func (x *OSAuthBeginRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *OSAuthBeginRequest) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *OSAuthBeginRequest) GetLanguageId() int64 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

func (x *OSAuthBeginRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *OSAuthBeginRequest) GetHqLocationId() int64 {
	if x != nil {
		return x.HqLocationId
	}
	return 0
}

func (x *OSAuthBeginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OSAuthBeginRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *OSAuthBeginRequest) GetApplicationId() int64 {
	if x != nil {
		return x.ApplicationId
	}
	return 0
}

// OSAuthBeginResponse defines the structure of SeaTalk official site authentication beginning response.
type OSAuthBeginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OSAuthBeginResponse) Reset() {
	*x = OSAuthBeginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSAuthBeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSAuthBeginResponse) ProtoMessage() {}

func (x *OSAuthBeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSAuthBeginResponse.ProtoReflect.Descriptor instead.
func (*OSAuthBeginResponse) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{3}
}

// OSAuthRedirectUrlRequest defines the structure of SeaTalk official site authentication redirect url request.
type OSAuthRedirectUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider      string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	CompanyName   string `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	LanguageId    int64  `protobuf:"varint,3,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
	LocationId    int64  `protobuf:"varint,4,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	HqLocationId  int64  `protobuf:"varint,5,opt,name=hq_location_id,json=hqLocationId,proto3" json:"hq_location_id,omitempty"`
	Email         string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	ApplicationId int64  `protobuf:"varint,8,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *OSAuthRedirectUrlRequest) Reset() {
	*x = OSAuthRedirectUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSAuthRedirectUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSAuthRedirectUrlRequest) ProtoMessage() {}

func (x *OSAuthRedirectUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSAuthRedirectUrlRequest.ProtoReflect.Descriptor instead.
func (*OSAuthRedirectUrlRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{4}
}

func (x *OSAuthRedirectUrlRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *OSAuthRedirectUrlRequest) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *OSAuthRedirectUrlRequest) GetLanguageId() int64 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

func (x *OSAuthRedirectUrlRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *OSAuthRedirectUrlRequest) GetHqLocationId() int64 {
	if x != nil {
		return x.HqLocationId
	}
	return 0
}

func (x *OSAuthRedirectUrlRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OSAuthRedirectUrlRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *OSAuthRedirectUrlRequest) GetApplicationId() int64 {
	if x != nil {
		return x.ApplicationId
	}
	return 0
}

// OSAuthRedirectUrlResponse defines the structure of SeaTalk official site authentication redirect url request.
type OSAuthRedirectUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        int32  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XRequestId   string `protobuf:"bytes,3,opt,name=_request_id,json=RequestId,proto3" json:"_request_id,omitempty"`
	LoginUrl     string `protobuf:"bytes,4,opt,name=login_url,json=loginUrl,proto3" json:"login_url,omitempty"`
}

func (x *OSAuthRedirectUrlResponse) Reset() {
	*x = OSAuthRedirectUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSAuthRedirectUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSAuthRedirectUrlResponse) ProtoMessage() {}

func (x *OSAuthRedirectUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSAuthRedirectUrlResponse.ProtoReflect.Descriptor instead.
func (*OSAuthRedirectUrlResponse) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{5}
}

func (x *OSAuthRedirectUrlResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *OSAuthRedirectUrlResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *OSAuthRedirectUrlResponse) GetXRequestId() string {
	if x != nil {
		return x.XRequestId
	}
	return ""
}

func (x *OSAuthRedirectUrlResponse) GetLoginUrl() string {
	if x != nil {
		return x.LoginUrl
	}
	return ""
}

// OSAuthCallbackRequest defines the structure of SeaTalk official site authentication callback request.
type OSAuthCallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	State    string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *OSAuthCallbackRequest) Reset() {
	*x = OSAuthCallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSAuthCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSAuthCallbackRequest) ProtoMessage() {}

func (x *OSAuthCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSAuthCallbackRequest.ProtoReflect.Descriptor instead.
func (*OSAuthCallbackRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{6}
}

func (x *OSAuthCallbackRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *OSAuthCallbackRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OSAuthCallbackRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

// OSAuthCallbackResponse defines the structure of SeaTalk official site authentication callback request.
type OSAuthCallbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OSAuthCallbackResponse) Reset() {
	*x = OSAuthCallbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSAuthCallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSAuthCallbackResponse) ProtoMessage() {}

func (x *OSAuthCallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSAuthCallbackResponse.ProtoReflect.Descriptor instead.
func (*OSAuthCallbackResponse) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{7}
}

// OSAuthHasCompanyRequest defines the structure of request to check if a user has company in after SeaTalk official site authentication callback.
type OSAuthHasCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OSAuthHasCompanyRequest) Reset() {
	*x = OSAuthHasCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSAuthHasCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSAuthHasCompanyRequest) ProtoMessage() {}

func (x *OSAuthHasCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSAuthHasCompanyRequest.ProtoReflect.Descriptor instead.
func (*OSAuthHasCompanyRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{8}
}

// OSAuthHasCompanyResponse defines the structure of response to check if a user has company in after SeaTalk official site authentication callback.
type OSAuthHasCompanyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        int32  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XRequestId   string `protobuf:"bytes,3,opt,name=_request_id,json=RequestId,proto3" json:"_request_id,omitempty"`
	HasCompany   bool   `protobuf:"varint,4,opt,name=has_company,json=hasCompany,proto3" json:"has_company,omitempty"`
}

func (x *OSAuthHasCompanyResponse) Reset() {
	*x = OSAuthHasCompanyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSAuthHasCompanyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSAuthHasCompanyResponse) ProtoMessage() {}

func (x *OSAuthHasCompanyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSAuthHasCompanyResponse.ProtoReflect.Descriptor instead.
func (*OSAuthHasCompanyResponse) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{9}
}

func (x *OSAuthHasCompanyResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *OSAuthHasCompanyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *OSAuthHasCompanyResponse) GetXRequestId() string {
	if x != nil {
		return x.XRequestId
	}
	return ""
}

func (x *OSAuthHasCompanyResponse) GetHasCompany() bool {
	if x != nil {
		return x.HasCompany
	}
	return false
}

// OAAuthBeginRequest defines the structure of response to check if a user has company in after SeaTalk official site authentication callback..
type OAAuthBeginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider         string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Language         string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	OrganizationCode string `protobuf:"bytes,3,opt,name=organization_code,json=organizationCode,proto3" json:"organization_code,omitempty"`
}

func (x *OAAuthBeginRequest) Reset() {
	*x = OAAuthBeginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAAuthBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAAuthBeginRequest) ProtoMessage() {}

func (x *OAAuthBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAAuthBeginRequest.ProtoReflect.Descriptor instead.
func (*OAAuthBeginRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{10}
}

func (x *OAAuthBeginRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *OAAuthBeginRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *OAAuthBeginRequest) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

// OAAuthBeginResponse defines the structure of SeaTalk OA authentication beginning response.
type OAAuthBeginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OAAuthBeginResponse) Reset() {
	*x = OAAuthBeginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAAuthBeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAAuthBeginResponse) ProtoMessage() {}

func (x *OAAuthBeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAAuthBeginResponse.ProtoReflect.Descriptor instead.
func (*OAAuthBeginResponse) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{11}
}

// OAAuthRedirectUrlRequest defines the structure of SeaTalk OA authentication redirect url request.
type OAAuthRedirectUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider         string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Language         string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	OrganizationCode string `protobuf:"bytes,3,opt,name=organization_code,json=organizationCode,proto3" json:"organization_code,omitempty"`
}

func (x *OAAuthRedirectUrlRequest) Reset() {
	*x = OAAuthRedirectUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAAuthRedirectUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAAuthRedirectUrlRequest) ProtoMessage() {}

func (x *OAAuthRedirectUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAAuthRedirectUrlRequest.ProtoReflect.Descriptor instead.
func (*OAAuthRedirectUrlRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{12}
}

func (x *OAAuthRedirectUrlRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *OAAuthRedirectUrlRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *OAAuthRedirectUrlRequest) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

// OAAuthRedirectUrlResponse defines the structure of SeaTalk OA authentication redirect url request.
type OAAuthRedirectUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        int32  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XRequestId   string `protobuf:"bytes,3,opt,name=_request_id,json=RequestId,proto3" json:"_request_id,omitempty"`
	LoginUrl     string `protobuf:"bytes,4,opt,name=login_url,json=loginUrl,proto3" json:"login_url,omitempty"`
}

func (x *OAAuthRedirectUrlResponse) Reset() {
	*x = OAAuthRedirectUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAAuthRedirectUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAAuthRedirectUrlResponse) ProtoMessage() {}

func (x *OAAuthRedirectUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAAuthRedirectUrlResponse.ProtoReflect.Descriptor instead.
func (*OAAuthRedirectUrlResponse) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{13}
}

func (x *OAAuthRedirectUrlResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *OAAuthRedirectUrlResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *OAAuthRedirectUrlResponse) GetXRequestId() string {
	if x != nil {
		return x.XRequestId
	}
	return ""
}

func (x *OAAuthRedirectUrlResponse) GetLoginUrl() string {
	if x != nil {
		return x.LoginUrl
	}
	return ""
}

// OAAuthCallbackRequest defines the structure of SeaTalk OA authentication callback request.
type OAAuthCallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	State    string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *OAAuthCallbackRequest) Reset() {
	*x = OAAuthCallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAAuthCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAAuthCallbackRequest) ProtoMessage() {}

func (x *OAAuthCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAAuthCallbackRequest.ProtoReflect.Descriptor instead.
func (*OAAuthCallbackRequest) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{14}
}

func (x *OAAuthCallbackRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *OAAuthCallbackRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OAAuthCallbackRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

// OAAuthCallbackResponse defines the structure of SeaTalk OA authentication callback request.
type OAAuthCallbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OAAuthCallbackResponse) Reset() {
	*x = OAAuthCallbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_oauth_login_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAAuthCallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAAuthCallbackResponse) ProtoMessage() {}

func (x *OAAuthCallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_oauth_login_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAAuthCallbackResponse.ProtoReflect.Descriptor instead.
func (*OAAuthCallbackResponse) Descriptor() ([]byte, []int) {
	return file_api_oauth_login_proto_rawDescGZIP(), []int{15}
}

var File_api_oauth_login_proto protoreflect.FileDescriptor

var file_api_oauth_login_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x50, 0x6f, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x8e,
	0x02, 0x0a, 0x12, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x71, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x68, 0x71, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x02, 0x0a, 0x18, 0x4f, 0x53, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x71, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x68, 0x71,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x93, 0x01,
	0x0a, 0x19, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x55, 0x72, 0x6c, 0x22, 0x5d, 0x0a, 0x15, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17,
	0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x48, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x18, 0x4f, 0x53, 0x41, 0x75,
	0x74, 0x68, 0x48, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x22, 0x79, 0x0a, 0x12, 0x4f, 0x41, 0x41, 0x75, 0x74, 0x68, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x4f,
	0x41, 0x41, 0x75, 0x74, 0x68, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x7f, 0x0a, 0x18, 0x4f, 0x41, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x19, 0x4f, 0x41, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0b,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0x5d, 0x0a, 0x15, 0x4f, 0x41, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x4f, 0x41, 0x41, 0x75,
	0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xb6, 0x04, 0x0a, 0x13, 0x4f, 0x53, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x0c, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0d, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x65, 0x0a,
	0x0b, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x4f,
	0x53, 0x41, 0x75, 0x74, 0x68, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12,
	0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73,
	0x69, 0x74, 0x65, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x7d, 0x12, 0x7b, 0x0a, 0x11, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x2e, 0x4f, 0x53, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x75, 0x72,
	0x6c, 0x12, 0x77, 0x0a, 0x0e, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x4f, 0x53,
	0x41, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x74, 0x65,
	0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x7d, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x6f, 0x0a, 0x10, 0x4f, 0x53,
	0x41, 0x75, 0x74, 0x68, 0x48, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x18,
	0x2e, 0x4f, 0x53, 0x41, 0x75, 0x74, 0x68, 0x48, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x4f, 0x53, 0x41, 0x75, 0x74,
	0x68, 0x48, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x2f,
	0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x32, 0xc8, 0x02, 0x0a, 0x13,
	0x4f, 0x41, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0b, 0x4f, 0x41, 0x41, 0x75, 0x74, 0x68, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x12, 0x13, 0x2e, 0x4f, 0x41, 0x41, 0x75, 0x74, 0x68, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x4f, 0x41, 0x41, 0x75, 0x74, 0x68,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x12, 0x6d, 0x0a, 0x11,
	0x4f, 0x41, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72,
	0x6c, 0x12, 0x19, 0x2e, 0x4f, 0x41, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x4f,
	0x41, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x75, 0x72, 0x6c, 0x12, 0x69, 0x0a, 0x0e, 0x4f,
	0x41, 0x41, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x2e,
	0x4f, 0x41, 0x41, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x4f, 0x41, 0x41, 0x75, 0x74, 0x68, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x06, 0x5a, 0x04, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_oauth_login_proto_rawDescOnce sync.Once
	file_api_oauth_login_proto_rawDescData = file_api_oauth_login_proto_rawDesc
)

func file_api_oauth_login_proto_rawDescGZIP() []byte {
	file_api_oauth_login_proto_rawDescOnce.Do(func() {
		file_api_oauth_login_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_oauth_login_proto_rawDescData)
	})
	return file_api_oauth_login_proto_rawDescData
}

var file_api_oauth_login_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_oauth_login_proto_goTypes = []interface{}{
	(*PingRequest)(nil),               // 0: PingRequest
	(*PongResponse)(nil),              // 1: PongResponse
	(*OSAuthBeginRequest)(nil),        // 2: OSAuthBeginRequest
	(*OSAuthBeginResponse)(nil),       // 3: OSAuthBeginResponse
	(*OSAuthRedirectUrlRequest)(nil),  // 4: OSAuthRedirectUrlRequest
	(*OSAuthRedirectUrlResponse)(nil), // 5: OSAuthRedirectUrlResponse
	(*OSAuthCallbackRequest)(nil),     // 6: OSAuthCallbackRequest
	(*OSAuthCallbackResponse)(nil),    // 7: OSAuthCallbackResponse
	(*OSAuthHasCompanyRequest)(nil),   // 8: OSAuthHasCompanyRequest
	(*OSAuthHasCompanyResponse)(nil),  // 9: OSAuthHasCompanyResponse
	(*OAAuthBeginRequest)(nil),        // 10: OAAuthBeginRequest
	(*OAAuthBeginResponse)(nil),       // 11: OAAuthBeginResponse
	(*OAAuthRedirectUrlRequest)(nil),  // 12: OAAuthRedirectUrlRequest
	(*OAAuthRedirectUrlResponse)(nil), // 13: OAAuthRedirectUrlResponse
	(*OAAuthCallbackRequest)(nil),     // 14: OAAuthCallbackRequest
	(*OAAuthCallbackResponse)(nil),    // 15: OAAuthCallbackResponse
}
var file_api_oauth_login_proto_depIdxs = []int32{
	0,  // 0: OSOAuthLoginService.Ping:input_type -> PingRequest
	2,  // 1: OSOAuthLoginService.OSAuthBegin:input_type -> OSAuthBeginRequest
	4,  // 2: OSOAuthLoginService.OSAuthRedirectUrl:input_type -> OSAuthRedirectUrlRequest
	6,  // 3: OSOAuthLoginService.OSAuthCallback:input_type -> OSAuthCallbackRequest
	8,  // 4: OSOAuthLoginService.OSAuthHasCompany:input_type -> OSAuthHasCompanyRequest
	10, // 5: OAOAuthLoginService.OAAuthBegin:input_type -> OAAuthBeginRequest
	12, // 6: OAOAuthLoginService.OAAuthRedirectUrl:input_type -> OAAuthRedirectUrlRequest
	14, // 7: OAOAuthLoginService.OAAuthCallback:input_type -> OAAuthCallbackRequest
	1,  // 8: OSOAuthLoginService.Ping:output_type -> PongResponse
	3,  // 9: OSOAuthLoginService.OSAuthBegin:output_type -> OSAuthBeginResponse
	5,  // 10: OSOAuthLoginService.OSAuthRedirectUrl:output_type -> OSAuthRedirectUrlResponse
	7,  // 11: OSOAuthLoginService.OSAuthCallback:output_type -> OSAuthCallbackResponse
	9,  // 12: OSOAuthLoginService.OSAuthHasCompany:output_type -> OSAuthHasCompanyResponse
	11, // 13: OAOAuthLoginService.OAAuthBegin:output_type -> OAAuthBeginResponse
	13, // 14: OAOAuthLoginService.OAAuthRedirectUrl:output_type -> OAAuthRedirectUrlResponse
	15, // 15: OAOAuthLoginService.OAAuthCallback:output_type -> OAAuthCallbackResponse
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_api_oauth_login_proto_init() }
func file_api_oauth_login_proto_init() {
	if File_api_oauth_login_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_oauth_login_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSAuthBeginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSAuthBeginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSAuthRedirectUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSAuthRedirectUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSAuthCallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSAuthCallbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSAuthHasCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OSAuthHasCompanyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAAuthBeginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAAuthBeginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAAuthRedirectUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAAuthRedirectUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAAuthCallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_oauth_login_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAAuthCallbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_oauth_login_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_oauth_login_proto_goTypes,
		DependencyIndexes: file_api_oauth_login_proto_depIdxs,
		MessageInfos:      file_api_oauth_login_proto_msgTypes,
	}.Build()
	File_api_oauth_login_proto = out.File
	file_api_oauth_login_proto_rawDesc = nil
	file_api_oauth_login_proto_goTypes = nil
	file_api_oauth_login_proto_depIdxs = nil
}
